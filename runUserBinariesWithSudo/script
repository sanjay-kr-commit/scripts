#!/bin/bash

sudo() {

  sudoPath="/usr/bin/sudo"
  newArgs=""
  isLocal=false
  shouldConfirm=false

  for arg in $@ ;
  do  

    if [[ "$arg" == "-Q" ]] ; then
      shouldConfirm=true
    elif [[ "$arg" == "-H" ]] || [[ "$arg" == "-h" ]]  ; then
      echo "Argment provided by sudo script"
      echo "You can use \"-L\" followed by local program name for using local installed program with sudo"
      echo "You can use \"-Q\" for verifying parsed query before executing"
      echo ""
      eval "$sudoPath -H"
      return 0
    elif [[ "$arg" == "-L" ]] ; then 
      isLocal=true
    elif [[ "$isLocal" == "true" ]] ; then
      absolutePath=$(which $arg)
      if [[ "$arg not found" == "$absolutePath" ]] ; then 
        echo "Local program \"$arg\" not found"
        return -1 
      fi

      isFunction=$( echo $absolutePath | grep "$arg *( *)" )
      isFunction=${isFunction//[[:blank:]]/}
      if [[ "$isFunction" != "" ]] ; then 
        isFunction=${isFunction:0:(${#isFunction}-1)}
        isFunction=${isFunction//[[:blank:]]/}
      fi

      if [[ "$isFunction" == "" ]] ; then 
        newArgs="$newArgs $absolutePath"
      else 
        newArgs="export $absolutePath && $newArgs $arg"
      fi 
      isLocal=false
    else 
      newArgs="$newArgs $arg"
    fi

  done

  if [[ "$shouldConfirm" == "true" ]]; then

    echo "sudo $newArgs"
    echo -n "Enter \"y\" to confirm : "
    read confirm 
    if [[ "$confirm" != "y" ]] ; then 
      return
    fi

  fi


  return

  eval "$sudoPath $newArgs" 

}
